{
  "hash": "7eb84a6addf3842f0b9f73604098fa16",
  "result": {
    "markdown": "---\ntitle: \"Zero-Inflated Poisson\"\n---\n\n::: {.cell}\n\n:::\n\n\n## Introduction\n\nPoisson regression is used for count and rate data, but if may not be the best model when there are excess zeroes in that data, which is when we may use Zero-inflated poisson regression instead. ZIP models have one parameter representing the probability of a structured zero, and another representing the Poisson mean. The ZIP distribution has the parameters $\\pi$ and $\\lambda$, denoted by $ZIP(\\pi, \\lambda)$, with this probability mass function.\n\n\n```{=tex}\n\\begin{equation}\n  P(X=k) =\n    \\begin{cases}\n      \\pi + (1-\\pi)(exp(-\\lambda)) & \\text{if $k = 0$}\\\\\n      (1-\\pi)exp(-\\lambda)\\frac{\\lambda^k}{k!} & \\text{if $k = 1, 2, 3, ...$}\\\\\n    \\end{cases}       \n\\end{equation}\n```\n\nThe figure below shows a zero-inflated Poisson model, where the zeros are either sampling zeros or structural zeros.\n\n\n::: {.cell layout-align=\"left\"}\n::: {.cell-output-display}\n![](zipoisson_files/figure-html/unnamed-chunk-2-1.png){fig-align='left' width=8.5in}\n:::\n:::\n\n\n## Uses\n\nAn example of when ZIP-distributed count happens is when ecologists counting plants or animals get a zero when the species is absent at many sites, but get a Poisson distributed count when they are present. Another example is for estimating the the dental health of individuals, by counting how many dental cavities there are. Most people have 0 dental cavities as children, so this is a good use case for ZIP.\n\n## Assumptions\n\n-   It follows the same assumptions for the Poisson regression for the counts generated by the Poisson process, and assumptions that apply for the logistic model that models the probability of being a zero.\n\n## Our Zero-inflated Poisson Regression Implementation\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\nzippoisson_function <- function(fn_formula, data) {\n  number_omitted <- nrow(data) - nrow(na.omit(data))\n  data <- na.omit(data)\n\n  vars <- all.vars(as.formula(fn_formula))\n  y_name <- vars[1]\n  covL <- data[, vars[2]]\n  covp <- data[, vars[3]]\n  n <- nrow(data)\n  Y <- matrix(data[, y_name], nrow = n, ncol = 1)\n\n  optim_zip <- function(beta) {\n    lambda <- exp(beta[1] + beta[2] * covL)\n    p <- plogis(beta[3] + beta[4] * covp)\n    lik <- p * (Y == 0) + (1 - p) * dpois(Y, lambda)\n    return(-sum(log(lik)))\n  }\n  result <- optim(par = rep(0, 4), fn = optim_zip, hessian = T)\n  OI <- solve(result$hessian)\n  se <- sqrt(diag(OI))\n  z_value <- result$par / se\n  p_value <- 2 * pnorm(-1 * abs(z_value))\n\n  coef <- rbind(result$par, se, z_value, p_value)\n\n  colnames(coef) <- c(\"(Intercept)\", vars[2], \"(Intercept)\", vars[3])\n  rownames(coef) <- c(\"Estimate\", \"Std. Error\", \"z value\", \"p value\")\n  return(t(coef))\n}\n```\n:::\n\n\nComparing performance\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\nn <- 1000\ncovL <- seq(0, 1, length.out = n)\ncovp <- seq(0, 1, length.out = n)\ntrueMeans <- exp(1.5 - 0.5 * covL)\nprobability <- plogis(-0.5 + 2.5 * covp)\nU <- runif(n, 0, 1)\ny <- rpois(n, trueMeans)\ny[U < probability] <- 0\nzip_data <- data.frame(y, covL, covp)\nhist(zip_data$y, main = \"Histogram of Zero-inflated Poisson data\", xlab = \"Count\")\n```\n\n::: {.cell-output-display}\n![](zipoisson_files/figure-html/unnamed-chunk-4-1.png){fig-align='left' width=8.5in}\n:::\n\n```{.r .cell-code}\n# comparing performance of our implementation with zeroinfl\nzippoisson_function(fn_formula = \"y ~ covL | covp\", data = zip_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              Estimate Std. Error   z value       p value\n(Intercept)  1.5110398 0.04973986 30.378851 1.045285e-202\ncovL        -0.6505926 0.12418413 -5.238935  1.615060e-07\n(Intercept) -0.4266365 0.13620157 -3.132390  1.733893e-03\ncovp         2.4480016 0.26972049  9.076069  1.125674e-19\n```\n:::\n\n```{.r .cell-code}\nsummary(pscl::zeroinfl(y ~ covL | covp))$coef\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$count\n              Estimate Std. Error   z value      Pr(>|z|)\n(Intercept)  1.5111633 0.04973736 30.382862 9.252314e-203\ncovL        -0.6508453 0.12418346 -5.240998  1.597104e-07\n\n$zero\n              Estimate Std. Error   z value     Pr(>|z|)\n(Intercept) -0.4263151  0.1362002 -3.130062 1.747691e-03\ncovp         2.4477580  0.2697245  9.075029 1.136467e-19\n```\n:::\n:::\n\n\n## Checking Assumptions\n\n#### Suitability for ZIP or Poisson\n\nUsing the crabs data again, we will check the suitability for ZIP or Poisson with a likelihood ratio test.\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\nzip_model <- pscl::zeroinfl(satell ~ width | width, data = crabs)\npois_model <- glm(satell ~ width, family = poisson, data = crabs)\nlmtest::lrtest(zip_model, pois_model)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in modelUpdate(objects[[i - 1]], objects[[i]]): original model was of\nclass \"zeroinfl\", updated model is of class \"glm\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLikelihood ratio test\n\nModel 1: satell ~ width | width\nModel 2: satell ~ width\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   4 -364.82                         \n2   2 -461.59 -2 193.53  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nIf we set the significance level at 0.05, the likelihood ratio test shows that we should reject the null hypothesis, so the ZIP model offers an improvement in fit over the Poisson model, since the ZIP model has a log likelihood closer to zero.\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\npois_model <- glm(y ~ covL + covp, data = zip_data)\nzip_model <- pscl::zeroinfl(y ~ covL | covp, data = zip_data)\nlmtest::lrtest(zip_model, pois_model)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in modelUpdate(objects[[i - 1]], objects[[i]]): original model was of\nclass \"zeroinfl\", updated model is of class \"glm\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLikelihood ratio test\n\nModel 1: y ~ covL | covp\nModel 2: y ~ covL + covp\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   4 -1189.3                         \n2   3 -2060.6 -1 1742.6  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nThis likelihood ratio test of our own constructed dataset following a ZIP distribution also has a p-value of smaller than 0.05, and that the ZIP model has a log likelihood closer to zero, indicating better suitability for a ZIP model.\n\n## Conclusion\n\nZIP models provide a flexible framework by combining a Poisson distribution for positive counts with a logistic regression component to model the excess zeros. It is most appropriate to plot the data and see whether a dataset containing a count response variable is suited for Poisson or ZIP, and then conducting a likelihood ratio test to compare them.\n",
    "supporting": [
      "zipoisson_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}